# Generation of Kubernetes YAML is still under development!
#
# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-2.2.1
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2021-04-29T18:17:15Z"
  labels:
    app: postgresql
  name: postgresql
spec:
  containers:
  - command:
    - run-postgresql
    env:
    - name: PATH
      value: /opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: container
      value: oci
    - name: PGUSER
      value: postgres
    - name: ENABLED_COLLECTIONS
    - name: SUMMARY
      value: PostgreSQL is an advanced Object-Relational database management system
    - name: DESCRIPTION
      value: PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.
    - name: PLATFORM
      value: el8
    - name: POSTGRESQL_VERSION
      value: "12"
    - name: POSTGRESQL_USER
      value: root
    - name: STI_SCRIPTS_URL
      value: image:///usr/libexec/s2i
    - name: HOME
      value: /var/lib/pgsql
    - name: APP_DATA
      value: /opt/app-root
    - name: APP_ROOT
      value: /opt/app-root
    - name: CONTAINER_SCRIPTS_PATH
      value: /usr/share/container-scripts/postgresql
    - name: STI_SCRIPTS_PATH
      value: /usr/libexec/s2i
    - name: POSTGRESQL_DATABASE
      value: root
    - name: POSTGRESQL_PASSWORD
      value: password
    - name: HOSTNAME
      value: postgresql
    image: registry.redhat.io/rhel8/postgresql-12
    name: postgresql-12
    ports:
    - containerPort: 5432
      hostPort: 46597
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      runAsGroup: 26
      runAsUser: 26
      seLinuxOptions: {}
    volumeMounts:
    - mountPath: /data
      name: data
    workingDir: /opt/app-root/src
  restartPolicy: Always
  volumes:
  - hostPath:
      path: /data
      type: Directory
    name: data
status: {}
---
metadata:
  creationTimestamp: null
spec: {}
status:
  loadBalancer: {}

