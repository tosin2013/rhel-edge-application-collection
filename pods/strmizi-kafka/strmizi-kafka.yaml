# Generation of Kubernetes YAML is still under development!
#
# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-2.2.1
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2021-04-29T18:16:39Z"
  labels:
    app: strmizi-kafka
  name: strmizi-kafka
spec:
  containers:
  - command:
    - bin/kafka-server-start.sh
    - config/server.properties
    - --override
    - listeners=PLAINTEXT://0.0.0.0:9092
    - --override
    - advertised.listeners=PLAINTEXT://localhost:9092
    - --override
    - zookeeper.connect=zookeeper:2181
    env:
    - name: PATH
      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: container
      value: podman
    - name: KAFKA_VERSION
      value: 2.7.0
    - name: KAFKA_EXPORTER_HOME
      value: /opt/kafka-exporter
    - name: CRUISE_CONTROL_HOME
      value: /opt/cruise-control
    - name: LOG_DIR
      value: /tmp/logs
    - name: KAFKA_ZOOKEEPER_CONNECT
      value: zookeeper:2181
    - name: KAFKA_HOME
      value: /opt/kafka
    - name: TINI_SHA256
      value: 12d20136605531b09a2c2dac02ccee85e1b874eb322ef6baf7561cd93f93c855
    - name: TINI_VERSION
      value: v0.18.0
    - name: KAFKA_ADVERTISED_LISTENERS
      value: PLAINTEXT://localhost:9092
    - name: S2I_HOME
      value: /opt/kafka/s2i
    - name: KAFKA_LISTENERS
      value: PLAINTEXT://0.0.0.0:9092
    - name: STRIMZI_VERSION
      value: 0.21.1
    - name: KAFKA_EXPORTER_VERSION
      value: 1.2.0
    - name: KAFKA_EXPORTER_CHECKSUM
      value: 7afa40365ddf0cb0a88457684bd64d565e250c7e5a4536ba7f9d37d02d2808c3b07766f94e0b1338beb296573ade29db630948c931be44bde416c0410b5d783b  kafka_exporter-1.2.0.linux-amd64.tar.gz
    - name: STUNNEL_HOME
      value: /opt/stunnel
    - name: HOSTNAME
      value: strmizi-kafka
    image: quay.io/strimzi/kafka:0.21.1-kafka-2.7.0
    name: kafka
    ports:
    - containerPort: 9092
      hostPort: 41641
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      runAsGroup: 0
      runAsUser: 1001
      seLinuxOptions: {}
    workingDir: /opt/kafka
  restartPolicy: Never
status: {}
---
metadata:
  creationTimestamp: null
spec: {}
status:
  loadBalancer: {}

